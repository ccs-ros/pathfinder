from ctypes import *from packet_class import *from serial_comm.msg import pkt_1_msg#***************************************************************************#* class Packet_1_Type(Structure)#*#* Description: C-type structure that defines the serial buffer packet fields #*                           #***************************************************************************class Packet_1_Type(Structure):	_pack_ = 1	_fields_=[("H1",c_ubyte),("H2",c_ubyte),("H3",c_ubyte),("counter",c_ushort),("time",c_ushort),("Heading_psi",c_short),("Heading_psi_conf",c_ushort),("Bearing_gamma",c_short),("Distance",c_short),("Bearing_gamma_conf",c_ushort),("Distance_conf",c_ushort),("Fill1",c_ushort),("Fill2",c_ushort),("Body_pitch",c_short),("Body_roll",c_short),("Body_pitch_conf",c_ushort),("Body_roll_conf",c_ushort),("Ground_pitch",c_short),("Ground_roll",c_short),("Ground_pitch_conf",c_ushort),("Ground_roll_conf",c_ushort),("Gimbal_angle1",c_short),("Gimbal_angle2",c_short),("Gimbal_angle3",c_short),("Velocity",c_short),("Pitch_rate",c_short),("Yaw_rate",c_short),("Roll_rate",c_short),("Mode",c_ushort),("status",c_ubyte),("reserved",c_ubyte*7),("checksum",c_ubyte)]#***************************************************************************#* class Packet_1_Buff(Union)#*#* Description: Union structure that joins the serial buffer and packet structure #*                                    in the same memory location.#*                           #***************************************************************************class Packet_1_Buff(Union):	_fields_ = [("buffer",c_ubyte*64),("fields",Packet_1_Type)]#***************************************************************************#* class Packet_1(Packet_Class)#*#* Description: Specific packet class that contains serial buffer and fields structure and #*                                    ROS Topic message object.#*                           Includes methods for construction and copying data between buffer and message#***************************************************************************class Packet_1(Packet_Class):		#***************************************************************************	#* method __init__()	#*	#* Description: Constructs and initializes member data 	#*              	#***************************************************************************	def __init__(self):		self.packet = Packet_1_Buff()		self.initialize_packet(1)		self.msg = pkt_1_msg()		self.msg_class = pkt_1_msg		self.rate_Hz = 10		#***************************************************************************	#* method unpack_buffer2msg	#*	#* Description: copies serial buffer packet fields into ROS Topic message fields	#*              	#***************************************************************************	def unpack_buffer2msg(self):		self.msg.counter = self.packet.fields.counter		self.msg.time = self.packet.fields.time		self.msg.Heading_psi = self.packet.fields.Heading_psi		self.msg.Heading_psi_conf = self.packet.fields.Heading_psi_conf		self.msg.Bearing_gamma = self.packet.fields.Bearing_gamma		self.msg.Distance = self.packet.fields.Distance		self.msg.Bearing_gamma_conf = self.packet.fields.Bearing_gamma_conf		self.msg.Distance_conf = self.packet.fields.Distance_conf		self.msg.Fill1 = self.packet.fields.Fill1		self.msg.Fill2 = self.packet.fields.Fill2		self.msg.Body_pitch = self.packet.fields.Body_pitch		self.msg.Body_roll = self.packet.fields.Body_roll		self.msg.Body_pitch_conf = self.packet.fields.Body_pitch_conf		self.msg.Body_roll_conf = self.packet.fields.Body_roll_conf		self.msg.Ground_pitch = self.packet.fields.Ground_pitch		self.msg.Ground_roll = self.packet.fields.Ground_roll		self.msg.Ground_pitch_conf = self.packet.fields.Ground_pitch_conf		self.msg.Ground_roll_conf = self.packet.fields.Ground_roll_conf		self.msg.Gimbal_angle1 = self.packet.fields.Gimbal_angle1		self.msg.Gimbal_angle2 = self.packet.fields.Gimbal_angle2		self.msg.Gimbal_angle3 = self.packet.fields.Gimbal_angle3		self.msg.Velocity = self.packet.fields.Velocity		self.msg.Pitch_rate = self.packet.fields.Pitch_rate		self.msg.Yaw_rate = self.packet.fields.Yaw_rate		self.msg.Roll_rate = self.packet.fields.Roll_rate		self.msg.Mode = self.packet.fields.Mode		self.msg.status = self.packet.fields.status		#***************************************************************************	#* method pack_msg2buffer	#*	#* Description: copies ROS Topic message fields into serial buffer packet fields	#*              	#***************************************************************************	def pack_msg2buffer(self,in_msg):		self.packet.fields.time = in_msg.time		self.packet.fields.Heading_psi = in_msg.Heading_psi		self.packet.fields.Heading_psi_conf = in_msg.Heading_psi_conf		self.packet.fields.Bearing_gamma = in_msg.Bearing_gamma		self.packet.fields.Distance = in_msg.Distance		self.packet.fields.Bearing_gamma_conf = in_msg.Bearing_gamma_conf		self.packet.fields.Distance_conf = in_msg.Distance_conf		self.packet.fields.Fill1 = in_msg.Fill1		self.packet.fields.Fill2 = in_msg.Fill2		self.packet.fields.Body_pitch = in_msg.Body_pitch		self.packet.fields.Body_roll = in_msg.Body_roll		self.packet.fields.Body_pitch_conf = in_msg.Body_pitch_conf		self.packet.fields.Body_roll_conf = in_msg.Body_roll_conf		self.packet.fields.Ground_pitch = in_msg.Ground_pitch		self.packet.fields.Ground_roll = in_msg.Ground_roll		self.packet.fields.Ground_pitch_conf = in_msg.Ground_pitch_conf		self.packet.fields.Ground_roll_conf = in_msg.Ground_roll_conf		self.packet.fields.Gimbal_angle1 = in_msg.Gimbal_angle1		self.packet.fields.Gimbal_angle2 = in_msg.Gimbal_angle2		self.packet.fields.Gimbal_angle3 = in_msg.Gimbal_angle3		self.packet.fields.Velocity = in_msg.Velocity		self.packet.fields.Pitch_rate = in_msg.Pitch_rate		self.packet.fields.Yaw_rate = in_msg.Yaw_rate		self.packet.fields.Roll_rate = in_msg.Roll_rate		self.packet.fields.Mode = in_msg.Mode		self.packet.fields.status = in_msg.status