from ctypes import *from packet_class import *from serial_comm.msg import pkt_6_msg#***************************************************************************#* class Packet_6_Type(Structure)#*#* Description: C-type structure that defines the serial buffer packet fields #*                           #***************************************************************************class Packet_6_Type(Structure):	_pack_ = 1	_fields_=[("H1",c_ubyte),("H2",c_ubyte),("H3",c_ubyte),("counter",c_ushort),("time",c_ushort),("Motor_Servo_1",c_ubyte),("Motor_Servo_2",c_ubyte),("Motor_Servo_3",c_ubyte),("Motor_Servo_4",c_ubyte),("LED",c_ubyte),("status",c_ubyte),("reserved",c_ubyte*2),("checksum",c_ubyte)]#***************************************************************************#* class Packet_6_Buff(Union)#*#* Description: Union structure that joins the serial buffer and packet structure #*                                    in the same memory location.#*                           #***************************************************************************class Packet_6_Buff(Union):	_fields_ = [("buffer",c_ubyte*16),("fields",Packet_6_Type)]#***************************************************************************#* class Packet_6(Packet_Class)#*#* Description: Specific packet class that contains serial buffer and fields structure and #*                                    ROS Topic message object.#*                           Includes methods for construction and copying data between buffer and message#***************************************************************************class Packet_6(Packet_Class):		#***************************************************************************	#* method __init__()	#*	#* Description: Constructs and initializes member data 	#*              	#***************************************************************************	def __init__(self):		self.packet = Packet_6_Buff()		self.initialize_packet(6)		self.msg = pkt_6_msg()		self.msg_class = pkt_6_msg		self.rate_Hz = 50		#***************************************************************************	#* method unpack_buffer2msg	#*	#* Description: copies serial buffer packet fields into ROS Topic message fields	#*              	#***************************************************************************	def unpack_buffer2msg(self):		self.msg.counter = self.packet.fields.counter		self.msg.time = self.packet.fields.time		self.msg.Motor_Servo_1 = self.packet.fields.Motor_Servo_1		self.msg.Motor_Servo_2 = self.packet.fields.Motor_Servo_2		self.msg.Motor_Servo_3 = self.packet.fields.Motor_Servo_3		self.msg.Motor_Servo_4 = self.packet.fields.Motor_Servo_4		self.msg.LED = self.packet.fields.LED		self.msg.status = self.packet.fields.status		#***************************************************************************	#* method pack_msg2buffer	#*	#* Description: copies ROS Topic message fields into serial buffer packet fields	#*              	#***************************************************************************	def pack_msg2buffer(self,in_msg):		self.packet.fields.time = in_msg.time		self.packet.fields.Motor_Servo_1 = in_msg.Motor_Servo_1		self.packet.fields.Motor_Servo_2 = in_msg.Motor_Servo_2		self.packet.fields.Motor_Servo_3 = in_msg.Motor_Servo_3		self.packet.fields.Motor_Servo_4 = in_msg.Motor_Servo_4		self.packet.fields.LED = in_msg.LED		self.packet.fields.status = in_msg.status